[{"authors":["admin"],"categories":null,"content":"Bárbara Barros Carlos is a PhD student in robotics at the DIAG robotics lab. Her research interests include aerial robotics and nonlinear model predictive control.\n","date":1593648000,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1593648000,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/author/barbara-barros-carlos/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/barbara-barros-carlos/","section":"authors","summary":"Bárbara Barros Carlos is a PhD student in robotics at the DIAG robotics lab. Her research interests include aerial robotics and nonlinear model predictive control.","tags":null,"title":"Bárbara Barros Carlos","type":"authors"},{"authors":["Bárbara Barros Carlos","Tommaso Sartor","Andrea Zanelli","Moritz Diehl","Giuseppe Oriolo"],"categories":null,"content":"","date":1593648000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593648000,"objectID":"60038b0b3d904f45e05985ca553830ec","permalink":"/publication/crazyflie-ifac/","publishdate":"2020-07-02T00:00:00Z","relpermalink":"/publication/crazyflie-ifac/","section":"publication","summary":"Least conservative collision avoidance constraint for robotic systems.","tags":["NMPC","Crazyflie","Quadrotor"],"title":"Least Conservative Linearized Constraint Formulation for Real-Time Motion Generation","type":"publication"},{"authors":["Giulio Turrisi","Bárbara Barros Carlos","Massimo Cefalo","Valerio Modugno","Leonardo Lanari","Giuseppe Oriolo"],"categories":null,"content":"","date":1593561600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593561600,"objectID":"1de83f25909d715df06bd1bc29b76b97","permalink":"/publication/pendubot-ifac/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/pendubot-ifac/","section":"publication","summary":"Combination between NMPC and RL.","tags":["NMPC","Pendubot"],"title":"Enforcing Constraints over Learned Policies via Nonlinear MPC: Application to the Pendubot","type":"publication"},{"authors":null,"categories":null,"content":"During my period as visiting PhD student at the LAAS-CNRS, Toulouse, France, I heavily worked with the mikrokopter platform. I was under the supervision of Dr. Antonio Franchi at the Robotics and Interactions (RIS) team.\nAs the platform was equipped with an Intel NUC7i7BNB, I developed a tailored NMPC, able to take advantage of the computational resources of the target CPU and run efficiently onboard. All subsequent solutions were then able to benefit from this base framework, developed under the GenoM3 architecture. One of those solutions was an NMPC applied to a quadrotor-slung payload system for the task of transportation on suspension. Later, I developed a mixed-initiative control method for human-robot systems based on real-time NMPC. This method handles the complex connection between the human inputs and the automatic controller commands for tasks requiring either assistive or shared control. It was numerically validated using the dynamic model of the real mikrokopter.\n","date":1571270400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1571270400,"objectID":"bdc6b828778fbe77d95dcf375630f432","permalink":"/project/mikrokopter/","publishdate":"2019-10-17T00:00:00Z","relpermalink":"/project/mikrokopter/","section":"project","summary":"Embedded NMPC and human-robot mixed-initiative control via NMPC.","tags":["PhD","NMPC","Quadrotor"],"title":"Mikrokopter","type":"project"},{"authors":null,"categories":null,"content":"The Crazyflie 2.1 nanoquadrotor was the platform I used in my projects during the period as visiting PhD student at the IMTEK University of Freiburg, Germany. I was under the supervision of professor Moritz Diehl at the Systems Control and Optimization Laboratory (syscop), supported by the Autonomous Intelligent Systems Lab (AIS) of professor Wolfram Burgard, and also Kiteswarms.\nWhen flying, the Crazyflie is able to log a limited amount of data back to the ground station. By doing so, and depending on the size of the data package, this will cause latency issues and delays in receiving the requested onboard information from the ground station. Due to this fact, the majority of the control strategies is then made onboard the Crazyflie which allows to perform fast angular position and rate stabilization. On the other hand, one has to consider that the limited onboard computational resources also limits the range of control techniques that can be used for stabilization. Therefore, I initially proposed a time-delay compensation strategy so an offboard NMPC can be used for position control. Later, a scheme for real-time motion generation in dynamic environments was built on top of the previous solution.\n","date":1558828800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1558828800,"objectID":"b7412d5edd14ed4538e70ffe0e28b78c","permalink":"/project/crazyflie/","publishdate":"2019-05-26T00:00:00Z","relpermalink":"/project/crazyflie/","section":"project","summary":"Real-time NMPC for nanoquadrotor.","tags":["PhD","NMPC","Crazyflie","Quadrotor"],"title":"Crazyflie","type":"project"},{"authors":null,"categories":null,"content":"At the beginning of my studies on real-time NMPC, I worked on its application to a challenging underactuated system. NMPC was combined with control-state trajectories generated from a learned policy to enforce constraints over a robotic system, as reinforcement learning is an unconstrained optimization technique. This method was experimentally validated on the Pendubot, aiming to perform a swing-up task. ","date":1546300800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1546300800,"objectID":"74e319721e7c58326f1043abf80c4747","permalink":"/project/pendubot/","publishdate":"2019-01-01T00:00:00Z","relpermalink":"/project/pendubot/","section":"project","summary":"Underactuated double-pendulum for experimentation of real-time NMPC.","tags":["PhD","Pendubot"],"title":"Pendubot","type":"project"},{"authors":null,"categories":null,"content":"In the early stages of my research as an undergraduate, I designed the software for flight control of a quadrotor prototype. I used a Beaglebone Black (BBB) Rev C with Debian 8 Jessie as development board. The software had three layers and was divided according to the task:   Low-level: altitude measurements from sonar. Written in Assembly using BBB's programmable real-time unit (PRU).   Middle-level: call for the methods written in Assembly and compiled as shared libraries that were needed by the main program. Written in C++.  High-level: sensors' calibration and reading, control law and motors' output. Written in Python.   I have also contributed to the development of one Device Tree Source for BBB that was needed for the management of the board's I/O in my project. The source files can be found here.\n","date":1420070400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1420070400,"objectID":"6d1b21e1b1873f83a79acbed1bba725e","permalink":"/project/autopilot/","publishdate":"2015-01-01T00:00:00Z","relpermalink":"/project/autopilot/","section":"project","summary":"Autopilot designed for a quadrotor prototype.","tags":["Quadrotor"],"title":"Autopilot","type":"project"}]