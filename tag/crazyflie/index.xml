<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Crazyflie | BÃ¡rbara</title>
    <link>/tag/crazyflie/</link>
      <atom:link href="/tag/crazyflie/index.xml" rel="self" type="application/rss+xml" />
    <description>Crazyflie</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Thu, 02 Jul 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>Crazyflie</title>
      <link>/tag/crazyflie/</link>
    </image>
    
    <item>
      <title>Least Conservative Linearized Constraint Formulation for Real-Time Motion Generation</title>
      <link>/publication/crazyflie-ifac/</link>
      <pubDate>Thu, 02 Jul 2020 00:00:00 +0000</pubDate>
      <guid>/publication/crazyflie-ifac/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Crazyflie</title>
      <link>/project/crazyflie/</link>
      <pubDate>Sun, 26 May 2019 00:00:00 +0000</pubDate>
      <guid>/project/crazyflie/</guid>
      <description>&lt;p align=&#34;justify&#34;&gt; The &lt;a href=&#34;https://www.bitcraze.io/crazyflie-2-1/&#34;&gt;Crazyflie 2.1&lt;/a&gt; nanoquadrotor was the platform I used in my projects during the period as visiting PhD student at the IMTEK University of Freiburg, Germany. I was under the supervision of professor Moritz Diehl at the &lt;a href=&#34;https://www.syscop.de&#34;&gt;Systems Control and Optimization Laboratory (syscop)&lt;/a&gt;, supported by the &lt;a href=&#34;http://ais.informatik.uni-freiburg.de/index_en.php&#34;&gt;Autonomous Intelligent Systems Lab (AIS)&lt;/a&gt; of professor Wolfram Burgard, and also &lt;a href=&#34;https://kiteswarms.com&#34;&gt;Kiteswarms&lt;/a&gt;.&lt;/p&gt;
&lt;p align=&#34;justify&#34;&gt; When flying, the Crazyflie is able to log a limited amount of data back to the ground station. By doing so, and depending on the size of the data package, this will cause latency issues and delays in receiving the requested onboard information from the ground station. Due to this fact, the majority of the control strategies is then made onboard the Crazyflie which allows to perform fast angular position and rate stabilization. On the other hand, one has to consider that the limited onboard computational resources also limits the range of control techniques that can be used for stabilization. Therefore, I initially proposed a time-delay compensation strategy so an offboard NMPC can be used for position control. Later, a scheme for real-time motion generation in dynamic environments was built on top of the previous solution.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
